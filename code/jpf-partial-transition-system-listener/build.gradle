/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

apply plugin: "java"
apply plugin: "eclipse"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// find home directory
ext.userHome = System.getProperty("user.home")

// find JPF's site.properties
Properties siteProperties = new Properties()
try {
    FileInputStream file = new FileInputStream("${userHome}/.jpf/site.properties")
    siteProperties.load(file)
    file.close()
} catch (FileNotFoundException ignored) {
    throw new GradleException("Please install jpf-core first and add the property 'jpf-core' to ${userHome}/.jpf pointing to the jpf-core installation")
}

// find jpf-core
ext.jpfCoreExists = false
ext.jpfCore = siteProperties.getProperty("jpf-core")
if (jpfCore != null) {
    jpfCore = jpfCore.replace('${user.home}', userHome)
    jpfCoreExists = new File(jpfCore).exists()
}
if (!jpfCoreExists) {
    throw new GradleException("${userHome}/.jpf/site.properties points to the jpf-core installation at ${jpfCore} but that directory does not exist")
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'
    
    //JPF implementation files
    implementation files("${jpfCore}/build/jpf.jar")

    // Use JUnit test framework
    testImplementation('junit:junit:4.13')
}

apply from: "gradle/source-sets.gradle"

task compile {
    group = "jpf-partial-transition-system-listener build"
    description = "Compiles all jpf-partial-transition-system-listener sources."

    dependsOn compileTestJava
}

defaultTasks "buildJars"
