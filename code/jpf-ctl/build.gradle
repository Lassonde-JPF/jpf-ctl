/*
 * This build script generates the antlr source files used for development / runtime. 
 *
 * @author Matt Walker
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    // Apply the antlr plugin to add support for ANTLR4
    id 'antlr'
    // javafx plugin for GUI
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

javafx {
    version = "15.0.1"
    modules = [ 'javafx.controls' ]
}

repositories {
    mavenCentral()
}

dependencies {

    // Use JUnit test framework
	testImplementation(platform('org.junit:junit-bom:5.7.2'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	
    // use ANTLR version 4
    antlr "org.antlr:antlr4:4.9.2" 
}

generateGrammarSource {
    
    arguments += ["-visitor"]
    
}

test {
    useJUnitPlatform()
    
    testLogging {
        events "passed", "skipped", "failed"
    }
    
    afterSuite { testDescriptor, result ->
        if (!testDescriptor.parent) {
            println "Test Execution: ${result.resultType}"

            def summaryFields = ["${result.testCount} tests",
                                 "${result.successfulTestCount} passed",
                                 "${result.failedTestCount} failed",
                                 "${result.skippedTestCount} skipped"]

            println ("Summary: " + summaryFields.join(", "))
        }
    }
}